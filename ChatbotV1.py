# -*- coding: utf-8 -*-
"""DT-Chatbot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OGdMPlanp6f3LVctmxaC076mi5d7_nLU
"""

# Requirment dependencies for Chatbot
!pip install spacy
!pip install chatterbot  
!pip install chatterbot_corpus  
!pip install Upython 
!pip install pyyaml==5.3.1
!pip install pyYAML==5.3.1
!pip install chatterbot-weather
!pip install python-forecastio==1.3.4
!pip install art
!pip install colorama

# Upgrading exisiting dependencies 
!pip install --upgrade chatterbot_corpus  
!pip install --upgrade chatterbot

# importing modules
import os
import time
import art
import datetime
from chatterbot import ChatBot  
from chatterbot.trainers import ListTrainer  
import chatterbot_weather
from chatterbot.trainers import ChatterBotCorpusTrainer
from colorama import Fore, Style, init

# bot configuration
myBot = ChatBot(  
    name = 'Sakura', 
    storage_adapter="chatterbot.storage.SQLStorageAdapter",
     filters=[
        'filters.get_recent_repeated_responses'
    ],
    logic_adapters = [  
        'chatterbot.logic.MathematicalEvaluation',  
        'chatterbot.logic.BestMatch' , 
        {
            'import_path': 'chatterbot.logic.BestMatch',
            'default_response': 'I am sorry, I do not understand you.',
            'maximum_similarity_threshold': 0.90,
        },
    ]
        )

# adddtional training materials
weather_convo = [
     'weather',
]

# importing libaries to prepare for training
list_trainee = ListTrainer(myBot)  
for i in (weather_convo):  
    list_trainee.train(i)

# start the training
corpus_trainee = ChatterBotCorpusTrainer(myBot)  
corpus_trainee.train('chatterbot.corpus.english')

# iniliazing the intraction between bot and user
init()

print(art.text2art("The ChatBot!", font="starwars"))
uname = input("What is your name? ")
bname = input("What would you like to name the bot? ")
print("")
while True:
    if os.system("color") == 1:
        query = input(f"{Fore.LIGHTBLUE_EX}{uname}>{Style.RESET_ALL} ").lower()
    else:
        query = input(f"{uname}> ").lower()

    if query.lower() == "Bye" or query.lower() == "bye":
        print("Bye now, have a nice day! \n")
        break
    elif query.lower() == "help":
        with open("commands.txt", "r") as f:
            fcontents = f.read()
            print(fcontents)
            f.close()
    elif query.lower() == "time":
        print(time.ctime(time.time()))
    answer =myBot.get_response(query)
    if os.system("color") == 1:
        print(f"{Fore.LIGHTYELLOW_EX}{bname}>{Style.RESET_ALL}", answer)
    else:
        print(f"{bname}>", answer)
